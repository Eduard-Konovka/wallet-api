{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.0",
    "title": "Wallet API overview",
    "description": "Wallet API overview",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    {
      "url": "https://wallet-proj.osc-fr1.scalingo.io/"
    },
    {
      "url": "http://localhost:4000/"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Users",
      "description": "User endpoints"
    },
    {
      "name": "Transactions",
      "description": "Transactions endpoint"
    }
  ],
  "schemes": ["http"],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User Registration",
        "requestBody": {
          "description": "Body of request for user registration",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User-registration-request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User was created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-auth-response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email, password and name should be provided"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Can't create user because email already taken",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User with email: {{submited email}} already exist"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "login user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User-login-request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-auth-response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email and password should be provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email or password is wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "tags": ["Auth"],
        "summary": "logout user (requires authentication token)",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "User successfully logged out"
          },
          "401": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not authorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "get user information (requires authentication token)",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns user information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-auth-response"
                }
              }
            }
          },
          "401": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not authorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/category": {
      "post": {
        "tags": ["Users"],
        "summary": "Add new transaction category",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Body of request for adding new category",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User-add-category-request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns updated transaction categories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-categories-response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Category type and name should be provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not authorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Demo version doesn't support this",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Sorry, demo version doesn't support this feature"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/name": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user name",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Body of request for update user name",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User-update-name-request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns updated user name",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-update-name-response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "New name should be provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not authorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Demo version doesn't support this",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Sorry, demo version doesn't support this feature"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/email": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user email",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Body of request for update user email",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User-update-email-request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns updated transaction categories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-update-email-response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "New email should be provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not authorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Demo version doesn't support this",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Sorry, demo version doesn't support this feature"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/subscription": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user subscription",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Body of request for update user subscription",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User-update-subscription-request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns updated user subscription",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-update-subscription-response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Subscription should be provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not authorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Get user's transactions (requires authentication token)",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get user's transactions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transactions-list-response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["Transactions"],
        "summary": "Post user's transaction (requires authentication token)",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Body of request for post user's transaction",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transactions-request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User's Transactions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction-response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": ["Transactions"],
        "summary": "Delete user's transactions (requires authentication token)",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Delete user's transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "10 transactions have been deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/transactions/stats": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Get user's transactions statistic (requires authentication token)",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Body of request for get user's transactions statistic",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transactions-stats-request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User's Transactions statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transactions-stats-response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "properties": {
          "id": {
            "type": "string",
            "example": "6248c39b6e52d51aeeabcc33"
          },
          "email": {
            "type": "string",
            "example": "user@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "strong_password"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyNDhjMzliNmU1MmQ1MWFlZWFiY2MzMyIsImlhdCI6MTY0ODkzNzY1OSwiZXhwIjoxNjQ5MDI0MDU5fQ.R_xVuzsK9Nzs9sj98Lk1lidJB27xDUjhYBOiPU-_fmY"
          },
          "name": {
            "type": "string",
            "example": "Mango"
          },
          "balance": {
            "type": "number",
            "example": "3000"
          },
          "totalTransactions": {
            "type": "integer",
            "example": "200"
          },
          "subscription": {
            "type": "string",
            "example": "basic"
          },
          "categories": {
            "type": "object",
            "properties": {
              "income": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": ["regular", "irregular"]
              },
              "expense": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": ["food", "education"]
              }
            }
          },
          "avatarURL": {
            "type": "string",
            "example": "avatars/Mango.png"
          }
        }
      },
      "User-registration-request": {
        "type": "object",
        "required": ["email", "password", "name"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email",
            "example": "mango@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "strong_password"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Mango"
          }
        }
      },
      "User-login-request": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "mango@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "strong_password"
          }
        }
      },
      "User-auth-response": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyNDhjMzliNmU1MmQ1MWFlZWFiY2MzMyIsImlhdCI6MTY0ODkzNzY1OSwiZXhwIjoxNjQ5MDI0MDU5fQ.R_xVuzsK9Nzs9sj98Lk1lidJB27xDUjhYBOiPU-_fmY"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "mango@gmail.com"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Mango"
              },
              "balance": {
                "type": "Number",
                "description": "User's balance",
                "example": "0"
              },
              "subscription": {
                "type": "string",
                "description": "User's subscription",
                "example": "basic"
              },
              "categories": {
                "type": "object",
                "description": "User's personal transactions categories",
                "properties": {
                  "income": {
                    "type": "array",
                    "example": ["regular", "irregular"]
                  },
                  "expense": {
                    "type": "array",
                    "example": ["food", "education"]
                  }
                }
              },
              "avatarURL": {
                "type": "string",
                "description": "User's personal avatar url",
                "example": "avatars/Mango.png"
              }
            }
          }
        }
      },
      "User-add-category-request": {
        "type": "object",
        "required": ["category", "type"],
        "properties": {
          "type": { "type": "boolean", "example": "true" },
          "category": {
            "type": "string",
            "example": "school fund"
          }
        }
      },
      "User-categories-response": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "object",
            "description": "Updated user categories",
            "properties": {
              "income": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": ["regular", "irregular"]
              },
              "expense": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": ["food", "education"]
              }
            }
          },
          "message": {
            "type": "string",
            "example": "New category {{category}} created successfully"
          }
        }
      },
      "User-update-name-request": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Kiwi"
          }
        }
      },
      "User-update-name-response": {
        "type": "object",
        "description": "Updated user name",
        "properties": {
          "name": {
            "type": "object",
            "description": "Updated user name",
            "example": "Kiwi"
          },
          "message": {
            "type": "string",
            "example": "User name updated successfully"
          }
        }
      },
      "User-update-email-request": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "new@email.com"
          }
        }
      },
      "User-update-email-response": {
        "type": "object",
        "description": "Updated user email",
        "properties": {
          "email": {
            "type": "object",
            "format": "email",
            "description": "Updated user email",
            "example": "new@email.com"
          },
          "message": {
            "type": "string",
            "example": "User email updated successfully"
          }
        }
      },
      "User-update-subscription-request": {
        "type": "object",
        "required": ["subscription"],
        "properties": {
          "subscription": {
            "type": "string",
            "example": "premium"
          }
        }
      },
      "User-update-subscription-response": {
        "type": "object",
        "description": "Updated user subscription",
        "properties": {
          "subscription": {
            "example": "premium"
          },
          "message": {
            "type": "string",
            "example": "User subscription updated successfully"
          }
        }
      },
      "Transactions-list-response": {
        "type": "object",
        "properties": {
          "transactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Transaction id",
                  "example": "624aa2c0f3a2ee5f009b105d"
                },
                "date": {
                  "type": "string",
                  "description": "Date of transaction",
                  "example": "03.01.2022"
                },
                "type": {
                  "type": "boolean",
                  "description": "Deposit or withdraw",
                  "example": true
                },
                "category": {
                  "type": "string",
                  "description": "Category",
                  "example": "Car"
                },
                "amount": {
                  "type": "number",
                  "description": "amount",
                  "example": 700
                },
                "createdAt": {
                  "type": "string",
                  "description": "Date of creation",
                  "example": "2022-01-03T23:00:00.000Z"
                },
                "updatedAt": {
                  "type": "string",
                  "description": "Date of modification",
                  "example": "2022-01-03T23:00:00.000Z"
                }
              }
            }
          },
          "balance": {
            "type": "number",
            "description": "Balance from User.balance",
            "example": 0
          },
          "page": {
            "type": "number",
            "description": "Page for pagination",
            "example": 1
          }
        },
        "example": {
          "transactions": [
            {
              "_id": "624aa2c0f3a2ee5f009b105d",
              "date": "04.04.2022 07:48",
              "type": true,
              "category": "Car",
              "comment": "",
              "amount": 700,
              "balance": 700,
              "createdAt": "2022-04-04T07:48:16.807Z",
              "updatedAt": "2022-04-04T07:48:16.807Z"
            },
            {
              "_id": "624aa2c8f3a2ee5f009b1061",
              "date": "04.04.2022 07:48",
              "type": true,
              "category": "Food",
              "comment": "",
              "amount": 700,
              "balance": 1400,
              "createdAt": "2022-04-04T07:48:24.034Z",
              "updatedAt": "2022-04-04T07:48:24.034Z"
            }
          ],
          "balance": 1400,
          "page": 1,
          "totalPages": 1
        }
      },
      "Transactions-request": {
        "type": "object",
        "required": ["date", "amount"],
        "properties": {
          "date": {
            "type": "string",
            "description": "Date of transaction",
            "example": "2022-01-03T23:00:00.000Z"
          },
          "type": {
            "type": "boolean",
            "description": "Deposit or withdraw",
            "example": true
          },
          "category": {
            "type": "string",
            "description": "Category",
            "example": "Food"
          },
          "comment": {
            "type": "string",
            "description": "Comment",
            "example": "About a transactions"
          },
          "amount": {
            "type": "number",
            "description": "Amount",
            "example": 700
          }
        }
      },
      "Transaction-response": {
        "type": "object",
        "properties": {
          "transactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Transaction id",
                  "example": "624aa2c0f3a2ee5f009b105d"
                },
                "date": {
                  "type": "string",
                  "description": "Date of transaction",
                  "example": "2022-01-03T23:00:00.000Z"
                },
                "type": {
                  "type": "boolean",
                  "description": "Deposit or withdraw",
                  "example": true
                },
                "category": {
                  "type": "string",
                  "description": "Category",
                  "example": "Car"
                },
                "amount": {
                  "type": "number",
                  "description": "amount",
                  "example": 700
                },
                "createdAt": {
                  "type": "string",
                  "description": "Date of creation",
                  "example": "2022-01-03T23:00:00.000Z"
                },
                "updatedAt": {
                  "type": "string",
                  "description": "Date of modification",
                  "example": "2022-01-03T23:00:00.000Z"
                }
              }
            }
          },
          "balance": {
            "type": "number",
            "description": "Balance from User.balance",
            "example": 0
          },
          "page": {
            "type": "number",
            "description": "Page for pagination",
            "example": 1
          }
        },
        "example": {
          "transactions": [
            {
              "_id": "624aa2c0f3a2ee5f009b105d",
              "date": "04.04.2022 07:48",
              "type": true,
              "category": "Car",
              "comment": "",
              "amount": 700,
              "balance": 700,
              "createdAt": "2022-04-04T07:48:16.807Z",
              "updatedAt": "2022-04-04T07:48:16.807Z"
            },
            {
              "_id": "624aa2c8f3a2ee5f009b1061",
              "date": "04.04.2022 07:48",
              "type": true,
              "category": "Food",
              "comment": "",
              "amount": 700,
              "balance": 1400,
              "createdAt": "2022-04-04T07:48:24.034Z",
              "updatedAt": "2022-04-04T07:48:24.034Z"
            }
          ],
          "balance": 1400,
          "page": 1,
          "totalPages": 1
        }
      },
      "Transactions-stats-request": {
        "type": "object",
        "required": ["month", "year"],
        "properties": {
          "month": {
            "type": "string",
            "description": "Index of month (0 - 11)",
            "example": "6"
          },
          "year": {
            "type": "string",
            "description": "Year",
            "example": "2022"
          }
        }
      },
      "Transactions-stats-response": {
        "type": "object",
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "category": {
                "type": "string",
                "description": "Category",
                "example": "Car"
              },
              "totalSum": {
                "type": "number",
                "description": "Total sum of the current category",
                "example": 0
              }
            }
          }
        },
        "example": {
          "income": [
            {
              "category": "regular income",
              "sum": 3600
            },
            {
              "category": "irregular income",
              "sum": 2000
            }
          ],
          "expense": [
            {
              "category": "Food",
              "sum": 300
            },
            {
              "category": "Car",
              "sum": 200
            },
            {
              "category": "Education",
              "sum": 600
            }
          ],
          "totalIncome": 5600,
          "totalExpenses": 1100,
          "firstTransactionDate": "2012-04-20T09:23:41.105Z"
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
